(
    [ Definition
        { name = "playbook"
        , requires = []
        , provides = []
        , outputs = Environment
            { getEnv = [] }
        , exprs =
            [ Expr
                { binder = Binder "resultsLocalhost0"
                , requires = []
                , provides =
                    [ Resource
                        { name = Binder "debug0"
                        , dep = Register "answer"
                        }
                    ]
                , outputs = Right []
                , requirements = []
                , loop = Nothing
                , term = DefinitionCall
                    ( CallDefinition
                        { name = "playLocalhost0"
                        , playAttrs =
                            [
                                ( "gather_facts"
                                , Bool False
                                )
                            ,
                                ( "hosts"
                                , String "localhost"
                                )
                            ]
                        , baseEnv = []
                        }
                    )
                }
            , Expr
                { binder = Binder "resultsBackend0"
                , requires =
                    [ Resource
                        { name = Binder "debug0"
                        , dep = Register "answer"
                        }
                    ]
                , provides = []
                , outputs = Right []
                , requirements =
                    [ Requirement
                        { name = "answer"
                        , origin = Nested
                            ( Binder "resultsLocalhost0" ) 0
                        }
                    ]
                , loop = Nothing
                , term = DefinitionCall
                    ( CallDefinition
                        { name = "playBackend0"
                        , playAttrs =
                            [
                                ( "gather_facts"
                                , Bool False
                                )
                            ,
                                ( "hosts"
                                , String "backend"
                                )
                            ]
                        , baseEnv = []
                        }
                    )
                }
            ]
        }
    , Definition
        { name = "playLocalhost0"
        , requires = []
        , provides =
            [ Resource
                { name = Binder "debug0"
                , dep = Register "answer"
                }
            ]
        , outputs = Environment
            { getEnv =
                [
                    ( Binder "debug0"
                    , Right
                        [ Resource
                            { name = Binder "debug0"
                            , dep = Register "answer"
                            }
                        ]
                    )
                ,
                    ( Binder "assert0"
                    , Right []
                    )
                ]
            }
        , exprs =
            [ Expr
                { binder = Binder "debug0"
                , requires = []
                , provides =
                    [ Resource
                        { name = Binder "debug0"
                        , dep = Register "answer"
                        }
                    ]
                , outputs = Right
                    [ Resource
                        { name = Binder "debug0"
                        , dep = Register "answer"
                        }
                    ]
                , requirements = []
                , loop = Nothing
                , term = ModuleCall
                    ( CallModule
                        { module_ = "debug"
                        , params = Object
                            ( fromList
                                [
                                    ( "msg"
                                    , String "42"
                                    )
                                ]
                            )
                        , taskAttrs = []
                        }
                    )
                }
            , Expr
                { binder = Binder "assert0"
                , requires =
                    [ Resource
                        { name = Binder "debug0"
                        , dep = Register "answer"
                        }
                    ]
                , provides = []
                , outputs = Right []
                , requirements =
                    [ Requirement
                        { name = "answer"
                        , origin = Direct
                            ( Binder "debug0" )
                        }
                    ]
                , loop = Nothing
                , term = ModuleCall
                    ( CallModule
                        { module_ = "assert"
                        , params = Object
                            ( fromList
                                [
                                    ( "that"
                                    , Array
                                        [ String "answer['msg'] == '42'" ]
                                    )
                                ]
                            )
                        , taskAttrs = []
                        }
                    )
                }
            ]
        }
    , Definition
        { name = "playBackend0"
        , requires =
            [ Resource
                { name = Binder "debug0"
                , dep = Register "answer"
                }
            ]
        , provides = []
        , outputs = Environment
            { getEnv =
                [
                    ( Binder "roleAdder0"
                    , Right []
                    )
                ]
            }
        , exprs =
            [ Expr
                { binder = Binder "roleAdder0"
                , requires =
                    [ Resource
                        { name = Binder "debug0"
                        , dep = Register "answer"
                        }
                    ]
                , provides = []
                , outputs = Right []
                , requirements = []
                , loop = Nothing
                , term = DefinitionCall
                    ( CallDefinition
                        { name = "roleAdder"
                        , playAttrs = []
                        , baseEnv =
                            [
                                ( "x"
                                , String "{{ answer['msg'] }}"
                                )
                            ,
                                ( "y"
                                , String "21"
                                )
                            ]
                        }
                    )
                }
            ]
        }
    , Definition
        { name = "roleAdder"
        , requires = []
        , provides =
            [ Resource
                { name = Binder "debug1"
                , dep = Register "add_result"
                }
            ]
        , outputs = Environment
            { getEnv =
                [
                    ( Binder "debug1"
                    , Right
                        [ Resource
                            { name = Binder "debug1"
                            , dep = Register "add_result"
                            }
                        ]
                    )
                ,
                    ( Binder "assert1"
                    , Right []
                    )
                ]
            }
        , exprs =
            [ Expr
                { binder = Binder "debug1"
                , requires = []
                , provides =
                    [ Resource
                        { name = Binder "debug1"
                        , dep = Register "add_result"
                        }
                    ]
                , outputs = Right
                    [ Resource
                        { name = Binder "debug1"
                        , dep = Register "add_result"
                        }
                    ]
                , requirements = []
                , loop = Nothing
                , term = ModuleCall
                    ( CallModule
                        { module_ = "debug"
                        , params = Object
                            ( fromList
                                [
                                    ( "msg"
                                    , String "Adding {{ x }} + {{ y }}"
                                    )
                                ]
                            )
                        , taskAttrs = []
                        }
                    )
                }
            , Expr
                { binder = Binder "assert1"
                , requires =
                    [ Resource
                        { name = Binder "debug1"
                        , dep = Register "add_result"
                        }
                    ]
                , provides = []
                , outputs = Right []
                , requirements =
                    [ Requirement
                        { name = "add_result"
                        , origin = Direct
                            ( Binder "debug1" )
                        }
                    ]
                , loop = Nothing
                , term = ModuleCall
                    ( CallModule
                        { module_ = "assert"
                        , params = Object
                            ( fromList
                                [
                                    ( "that"
                                    , Array
                                        [ String "x == '42' and y == '21'"
                                        , String "add_result['msg'] == 'Adding 42 + 21'"
                                        ]
                                    )
                                ]
                            )
                        , taskAttrs = []
                        }
                    )
                }
            ]
        }
    ]
, "-- Generated with haxible
  {-# LANGUAGE QuasiQuotes, ApplicativeDo, OverloadedStrings #-}
  {- cabal:
  build-depends: base, haxible
  ghc-options: -threaded -rtsopts -with-rtsopts=-N -with-rtsopts=-T
  -}
  module Main (main) where

  import Haxible.Eval

  main :: IO ()
  main = runHaxible "inventory.yaml" (playbook [] [])

  playbook :: Vars -> Vars -> AnsibleHaxl [Value]
  playbook playAttrs baseEnv = do
    resultsLocalhost0 <- playLocalhost0 ([("gather_facts", [json|false|]), ("hosts", [json|"localhost"|])] <> playAttrs) ([] <> [] <> baseEnv)
    resultsBackend0 <- playBackend0 ([("gather_facts", [json|false|]), ("hosts", [json|"backend"|])] <> playAttrs) ([("answer", resultsLocalhost0 !! 0)] <> [] <> baseEnv)
    pure $ resultsLocalhost0 <> resultsBackend0

  playLocalhost0 :: Vars -> Vars -> AnsibleHaxl [Value]
  playLocalhost0 playAttrs baseEnv = do
    debug0 <- runTask playAttrs [json|{"debug":{"msg":"42"}}|] ([] <> baseEnv)
    assert0 <- runTask playAttrs [json|{"assert":{"that":["answer['msg'] == '42'"]}}|] ([("answer", debug0)] <> baseEnv)
    pure $ [debug0] <> [assert0]

  playBackend0 :: Vars -> Vars -> AnsibleHaxl [Value]
  playBackend0 playAttrs baseEnv = do
    roleAdder0 <- roleAdder ([] <> playAttrs) ([] <> [("x", [json|"{{ answer['msg'] }}"|]), ("y", [json|"21"|])] <> baseEnv)
    pure $ roleAdder0

  roleAdder :: Vars -> Vars -> AnsibleHaxl [Value]
  roleAdder playAttrs baseEnv = do
    debug1 <- runTask playAttrs [json|{"debug":{"msg":"Adding {{ x }} + {{ y }}"}}|] ([] <> baseEnv)
    assert1 <- runTask playAttrs [json|{"assert":{"that":["x == '42' and y == '21'","add_result['msg'] == 'Adding 42 + 21'"]}}|] ([("add_result", debug1)] <> baseEnv)
    pure $ [debug1] <> [assert1]

  "
)