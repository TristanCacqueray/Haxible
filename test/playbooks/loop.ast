[ Definition
    { name = "playbook"
    , outputs = Environment
        { getEnv = [] }
    , playAttrs = []
    , defaultVars = []
    , source = ""
    , exprs =
        [ Expr
            { binder = Binder "resultsPlayLocalhost0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debugCallTaskInALoop0"
                    , dep = Register "loop_res"
                    }
                ]
            , outputs = Right []
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = DefinitionCall
                { defName = "playLocalhost0"
                , taskVars = []
                , rescue = False
                }
            }
        ]
    , handlers = []
    }
, Definition
    { name = "playLocalhost0"
    , outputs = Environment
        { getEnv =
            [
                ( Binder "debugCallTaskInALoop0"
                , Right
                    [ Resource
                        { name = Binder "debugCallTaskInALoop0"
                        , dep = Register "loop_res"
                        }
                    ]
                )
            ,
                ( Binder "debugLoopVar0"
                , Right []
                )
            ,
                ( Binder "resultsBlockNestedLoop0"
                , Left
                    ( Environment
                        { getEnv =
                            [
                                ( Binder "debug0"
                                , Right []
                                )
                            ]
                        }
                    )
                )
            ,
                ( Binder "debug1"
                , Right []
                )
            ]
        }
    , playAttrs =
        [
            ( "gather_facts"
            , Bool False
            )
        ,
            ( "hosts"
            , String "localhost"
            )
        ,
            ( "vars"
            , Object
                ( fromList
                    [
                        ( "xs"
                        , Array
                            [ Number 1.0
                            , Number 2.0
                            , Number 3.0
                            ]
                        )
                    ]
                )
            )
        ]
    , defaultVars = []
    , source = "test/playbooks"
    , exprs =
        [ Expr
            { binder = Binder "debugCallTaskInALoop0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debugCallTaskInALoop0"
                    , dep = Register "loop_res"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "debugCallTaskInALoop0"
                    , dep = Register "loop_res"
                    }
                ]
            , inputs =
                [ Requirement
                    { name = "item"
                    , origin = LoopVar
                    }
                ]
            , when_ = Nothing
            , loop = Just
                ( Array
                    [ String "A"
                    , String "B"
                    , String "C"
                    ]
                )
            , taskAttrs =
                [
                    ( "name"
                    , String "Call task in a loop"
                    )
                ]
            , term = ModuleCall
                { module_ = "debug"
                , params = Object
                    ( fromList
                        [
                            ( "msg"
                            , String "loop {{ item }}"
                            )
                        ]
                    )
                }
            }
        , Expr
            { binder = Binder "debugLoopVar0"
            , requires = []
            , provides = []
            , outputs = Right []
            , inputs =
                [ Requirement
                    { name = "lvar"
                    , origin = LoopVar
                    }
                ]
            , when_ = Nothing
            , loop = Just
                ( String "{{ xs }}" )
            , taskAttrs =
                [
                    ( "name"
                    , String "Loop var"
                    )
                ]
            , term = ModuleCall
                { module_ = "debug"
                , params = Object
                    ( fromList
                        [
                            ( "msg"
                            , String "loop control {{ lvar }}"
                            )
                        ]
                    )
                }
            }
        , Expr
            { binder = Binder "resultsBlockNestedLoop0"
            , requires = []
            , provides = []
            , outputs = Left
                ( Environment
                    { getEnv =
                        [
                            ( Binder "debug0"
                            , Right []
                            )
                        ]
                    }
                )
            , inputs =
                [ Requirement
                    { name = "lvar"
                    , origin = LoopVar
                    }
                ]
            , when_ = Nothing
            , loop = Just
                ( Array
                    [ String "0"
                    , String "1"
                    ]
                )
            , taskAttrs = []
            , term = DefinitionCall
                { defName = "blockNestedLoop0"
                , taskVars = []
                , rescue = False
                }
            }
        , Expr
            { binder = Binder "debug1"
            , requires =
                [ Resource
                    { name = Binder "debugCallTaskInALoop0"
                    , dep = Register "loop_res"
                    }
                ]
            , provides = []
            , outputs = Right []
            , inputs =
                [ Requirement
                    { name = "loop_res"
                    , origin = Direct
                        ( Binder "debugCallTaskInALoop0" )
                    }
                ]
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                { module_ = "debug"
                , params = Object
                    ( fromList
                        [
                            ( "msg"
                            , String "loop result is {{ loop_res }}"
                            )
                        ]
                    )
                }
            }
        ]
    , handlers = []
    }
, Definition
    { name = "blockNestedLoop0"
    , outputs = Environment
        { getEnv =
            [
                ( Binder "debug0"
                , Right []
                )
            ]
        }
    , playAttrs = []
    , defaultVars = []
    , source = "test/playbooks"
    , exprs =
        [ Expr
            { binder = Binder "debug0"
            , requires = []
            , provides = []
            , outputs = Right []
            , inputs =
                [ Requirement
                    { name = "item"
                    , origin = LoopVar
                    }
                ]
            , when_ = Nothing
            , loop = Just
                ( Array
                    [ String "a"
                    , String "b"
                    ]
                )
            , taskAttrs = []
            , term = ModuleCall
                { module_ = "debug"
                , params = Object
                    ( fromList
                        [
                            ( "msg"
                            , String "Nested loop {{ lvar }} {{ item }}"
                            )
                        ]
                    )
                }
            }
        ]
    , handlers = []
    }
]