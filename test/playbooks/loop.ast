[ Definition
    { name = "playbook"
    , requires = []
    , provides = []
    , outputs = Environment
        { getEnv = [] }
    , playAttrs = []
    , source = ""
    , exprs =
        [ Expr
            { binder = Binder "resultsLocalhost0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debugCallTaskInALoop0"
                    , dep = Register "loop_res"
                    }
                ]
            , outputs = Right []
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = DefinitionCall
                ( CallDefinition
                    { name = "playLocalhost0"
                    , taskVars = []
                    }
                )
            }
        ]
    , handlers = []
    }
, Definition
    { name = "playLocalhost0"
    , requires = []
    , provides =
        [ Resource
            { name = Binder "debugCallTaskInALoop0"
            , dep = Register "loop_res"
            }
        ]
    , outputs = Environment
        { getEnv =
            [
                ( Binder "debugCallTaskInALoop0"
                , Right
                    [ Resource
                        { name = Binder "debugCallTaskInALoop0"
                        , dep = Register "loop_res"
                        }
                    ]
                )
            ,
                ( Binder "debugLoopVar0"
                , Right []
                )
            ,
                ( Binder "debug0"
                , Right []
                )
            ]
        }
    , playAttrs =
        [
            ( "hosts"
            , String "localhost"
            )
        ,
            ( "vars"
            , Object
                ( fromList
                    [
                        ( "xs"
                        , Array
                            [ Number 1.0
                            , Number 2.0
                            , Number 3.0
                            ]
                        )
                    ]
                )
            )
        ]
    , source = "test/playbooks"
    , exprs =
        [ Expr
            { binder = Binder "debugCallTaskInALoop0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debugCallTaskInALoop0"
                    , dep = Register "loop_res"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "debugCallTaskInALoop0"
                    , dep = Register "loop_res"
                    }
                ]
            , inputs =
                [ Requirement
                    { name = "item"
                    , origin = LoopVar
                    }
                ]
            , when_ = Nothing
            , loop = Just
                ( Array
                    [ String "A"
                    , String "B"
                    , String "C"
                    ]
                )
            , taskAttrs =
                [
                    ( "name"
                    , String "Call task in a loop"
                    )
                ]
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "loop {{ item }}"
                                )
                            ]
                        )
                    }
                )
            }
        , Expr
            { binder = Binder "debugLoopVar0"
            , requires = []
            , provides = []
            , outputs = Right []
            , inputs =
                [ Requirement
                    { name = "lvar"
                    , origin = LoopVar
                    }
                ]
            , when_ = Nothing
            , loop = Just
                ( String "{{ xs }}" )
            , taskAttrs =
                [
                    ( "name"
                    , String "Loop var"
                    )
                ]
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "loop control {{ lvar }}"
                                )
                            ]
                        )
                    }
                )
            }
        , Expr
            { binder = Binder "debug0"
            , requires =
                [ Resource
                    { name = Binder "debugCallTaskInALoop0"
                    , dep = Register "loop_res"
                    }
                ]
            , provides = []
            , outputs = Right []
            , inputs =
                [ Requirement
                    { name = "loop_res"
                    , origin = Direct
                        ( Binder "debugCallTaskInALoop0" )
                    }
                ]
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "loop result is {{ loop_res }}"
                                )
                            ]
                        )
                    }
                )
            }
        ]
    , handlers = []
    }
]