[ Definition
    { name = "playbook"
    , requires = []
    , provides = []
    , outputs = Environment
        { getEnv = [] }
    , playAttrs = []
    , exprs =
        [ Expr
            { binder = Binder "resultsLocalhost0"
            , requires =
                [ Resource
                    { name = Binder "debugNestedIncludedTask0"
                    , dep = Register "nested_included_result"
                    }
                , Resource
                    { name = Binder "debugIncludedTask0"
                    , dep = Register "included_result"
                    }
                ]
            , provides = []
            , outputs = Right []
            , requirements = []
            , loop = Nothing
            , term = DefinitionCall
                ( CallDefinition
                    { name = "playLocalhost0"
                    , taskAttrs = []
                    , taskVars = []
                    }
                )
            }
        ]
    }
, Definition
    { name = "playLocalhost0"
    , requires =
        [ Resource
            { name = Binder "debugNestedIncludedTask0"
            , dep = Register "nested_included_result"
            }
        , Resource
            { name = Binder "debugIncludedTask0"
            , dep = Register "included_result"
            }
        ]
    , provides = []
    , outputs = Environment
        { getEnv =
            [
                ( Binder "tasksTaskstasksgreetyaml0"
                , Left
                    ( Environment
                        { getEnv =
                            [
                                ( Binder "debugIncludedTask0"
                                , Right
                                    [ Resource
                                        { name = Binder "debugIncludedTask0"
                                        , dep = Register "included_result"
                                        }
                                    ]
                                )
                            ,
                                ( Binder "tasksTasksothertasksyaml0"
                                , Left
                                    ( Environment
                                        { getEnv =
                                            [
                                                ( Binder "debugUnusedInclude0"
                                                , Right
                                                    [ Resource
                                                        { name = Binder "debugUnusedInclude0"
                                                        , dep = Register "_unused"
                                                        }
                                                    ]
                                                )
                                            ,
                                                ( Binder "debugNestedIncludedTask0"
                                                , Right
                                                    [ Resource
                                                        { name = Binder "debugNestedIncludedTask0"
                                                        , dep = Register "nested_included_result"
                                                        }
                                                    ]
                                                )
                                            ]
                                        }
                                    )
                                )
                            ]
                        }
                    )
                )
            ,
                ( Binder "debug0"
                , Right []
                )
            ]
        }
    , playAttrs =
        [
            ( "hosts"
            , String "localhost"
            )
        ]
    , exprs =
        [ Expr
            { binder = Binder "tasksTaskstasksgreetyaml0"
            , requires = []
            , provides = []
            , outputs = Left
                ( Environment
                    { getEnv =
                        [
                            ( Binder "debugIncludedTask0"
                            , Right
                                [ Resource
                                    { name = Binder "debugIncludedTask0"
                                    , dep = Register "included_result"
                                    }
                                ]
                            )
                        ,
                            ( Binder "tasksTasksothertasksyaml0"
                            , Left
                                ( Environment
                                    { getEnv =
                                        [
                                            ( Binder "debugUnusedInclude0"
                                            , Right
                                                [ Resource
                                                    { name = Binder "debugUnusedInclude0"
                                                    , dep = Register "_unused"
                                                    }
                                                ]
                                            )
                                        ,
                                            ( Binder "debugNestedIncludedTask0"
                                            , Right
                                                [ Resource
                                                    { name = Binder "debugNestedIncludedTask0"
                                                    , dep = Register "nested_included_result"
                                                    }
                                                ]
                                            )
                                        ]
                                    }
                                )
                            )
                        ]
                    }
                )
            , requirements =
                [ Requirement
                    { name = "item"
                    , origin = LoopVar
                    }
                ]
            , loop = Just
                ( Array
                    [ String "Haxible"
                    , String "World"
                    ]
                )
            , term = DefinitionCall
                ( CallDefinition
                    { name = "tasksTasksGreetYaml"
                    , taskAttrs = []
                    , taskVars =
                        [
                            ( "include_param"
                            , String "{{ item }}"
                            )
                        ]
                    }
                )
            }
        , Expr
            { binder = Binder "debug0"
            , requires =
                [ Resource
                    { name = Binder "debugNestedIncludedTask0"
                    , dep = Register "nested_included_result"
                    }
                , Resource
                    { name = Binder "debugIncludedTask0"
                    , dep = Register "included_result"
                    }
                ]
            , provides = []
            , outputs = Right []
            , requirements =
                [ Requirement
                    { name = "included_result"
                    , origin = Nested
                        ( Binder "tasksTaskstasksgreetyaml0" ) 0
                    }
                , Requirement
                    { name = "nested_included_result"
                    , origin = Nested
                        ( Binder "tasksTaskstasksgreetyaml0" ) 2
                    }
                ]
            , loop = Nothing
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "Result is {{ included_result }},
                                  nested {{ nested_included_result}}
                                  "
                                )
                            ]
                        )
                    , taskAttrs = []
                    }
                )
            }
        ]
    }
, Definition
    { name = "tasksTasksGreetYaml"
    , requires = []
    , provides =
        [ Resource
            { name = Binder "debugIncludedTask0"
            , dep = Register "included_result"
            }
        ]
    , outputs = Environment
        { getEnv =
            [
                ( Binder "debugIncludedTask0"
                , Right
                    [ Resource
                        { name = Binder "debugIncludedTask0"
                        , dep = Register "included_result"
                        }
                    ]
                )
            ,
                ( Binder "tasksTasksothertasksyaml0"
                , Left
                    ( Environment
                        { getEnv =
                            [
                                ( Binder "debugUnusedInclude0"
                                , Right
                                    [ Resource
                                        { name = Binder "debugUnusedInclude0"
                                        , dep = Register "_unused"
                                        }
                                    ]
                                )
                            ,
                                ( Binder "debugNestedIncludedTask0"
                                , Right
                                    [ Resource
                                        { name = Binder "debugNestedIncludedTask0"
                                        , dep = Register "nested_included_result"
                                        }
                                    ]
                                )
                            ]
                        }
                    )
                )
            ]
        }
    , playAttrs = []
    , exprs =
        [ Expr
            { binder = Binder "debugIncludedTask0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debugIncludedTask0"
                    , dep = Register "included_result"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "debugIncludedTask0"
                    , dep = Register "included_result"
                    }
                ]
            , requirements = []
            , loop = Nothing
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "Hello {{ include_param }}"
                                )
                            ]
                        )
                    , taskAttrs = []
                    }
                )
            }
        , Expr
            { binder = Binder "tasksTasksothertasksyaml0"
            , requires = []
            , provides = []
            , outputs = Left
                ( Environment
                    { getEnv =
                        [
                            ( Binder "debugUnusedInclude0"
                            , Right
                                [ Resource
                                    { name = Binder "debugUnusedInclude0"
                                    , dep = Register "_unused"
                                    }
                                ]
                            )
                        ,
                            ( Binder "debugNestedIncludedTask0"
                            , Right
                                [ Resource
                                    { name = Binder "debugNestedIncludedTask0"
                                    , dep = Register "nested_included_result"
                                    }
                                ]
                            )
                        ]
                    }
                )
            , requirements = []
            , loop = Nothing
            , term = DefinitionCall
                ( CallDefinition
                    { name = "tasksOtherTasksYaml"
                    , taskAttrs = []
                    , taskVars = []
                    }
                )
            }
        ]
    }
, Definition
    { name = "tasksOtherTasksYaml"
    , requires = []
    , provides =
        [ Resource
            { name = Binder "debugUnusedInclude0"
            , dep = Register "_unused"
            }
        , Resource
            { name = Binder "debugNestedIncludedTask0"
            , dep = Register "nested_included_result"
            }
        ]
    , outputs = Environment
        { getEnv =
            [
                ( Binder "debugUnusedInclude0"
                , Right
                    [ Resource
                        { name = Binder "debugUnusedInclude0"
                        , dep = Register "_unused"
                        }
                    ]
                )
            ,
                ( Binder "debugNestedIncludedTask0"
                , Right
                    [ Resource
                        { name = Binder "debugNestedIncludedTask0"
                        , dep = Register "nested_included_result"
                        }
                    ]
                )
            ]
        }
    , playAttrs = []
    , exprs =
        [ Expr
            { binder = Binder "debugUnusedInclude0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debugUnusedInclude0"
                    , dep = Register "_unused"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "debugUnusedInclude0"
                    , dep = Register "_unused"
                    }
                ]
            , requirements = []
            , loop = Nothing
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Null
                    , taskAttrs = []
                    }
                )
            }
        , Expr
            { binder = Binder "debugNestedIncludedTask0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debugNestedIncludedTask0"
                    , dep = Register "nested_included_result"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "debugNestedIncludedTask0"
                    , dep = Register "nested_included_result"
                    }
                ]
            , requirements = []
            , loop = Nothing
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "Nested {{ include_param }}"
                                )
                            ]
                        )
                    , taskAttrs = []
                    }
                )
            }
        ]
    }
]