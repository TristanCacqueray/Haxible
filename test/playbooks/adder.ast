[ Definition
    { name = "playbook"
    , requires = []
    , provides = []
    , outputs = Environment
        { getEnv = [] }
    , playAttrs = []
    , exprs =
        [ Expr
            { binder = Binder "resultsLocalhost0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debug0"
                    , dep = Register "answer"
                    }
                ]
            , outputs = Right []
            , requirements = []
            , loop = Nothing
            , term = DefinitionCall
                ( CallDefinition
                    { name = "playLocalhost0"
                    , taskAttrs = []
                    , taskVars = []
                    }
                )
            }
        , Expr
            { binder = Binder "resultsBackend0"
            , requires =
                [ Resource
                    { name = Binder "debug0"
                    , dep = Register "answer"
                    }
                ]
            , provides = []
            , outputs = Right []
            , requirements =
                [ Requirement
                    { name = "answer"
                    , origin = Nested
                        ( Binder "resultsLocalhost0" ) 0
                    }
                ]
            , loop = Nothing
            , term = DefinitionCall
                ( CallDefinition
                    { name = "playBackend0"
                    , taskAttrs = []
                    , taskVars = []
                    }
                )
            }
        ]
    }
, Definition
    { name = "playLocalhost0"
    , requires = []
    , provides =
        [ Resource
            { name = Binder "debug0"
            , dep = Register "answer"
            }
        ]
    , outputs = Environment
        { getEnv =
            [
                ( Binder "debug0"
                , Right
                    [ Resource
                        { name = Binder "debug0"
                        , dep = Register "answer"
                        }
                    ]
                )
            ,
                ( Binder "assert0"
                , Right []
                )
            ]
        }
    , playAttrs =
        [
            ( "gather_facts"
            , Bool False
            )
        ,
            ( "hosts"
            , String "localhost"
            )
        ]
    , exprs =
        [ Expr
            { binder = Binder "debug0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debug0"
                    , dep = Register "answer"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "debug0"
                    , dep = Register "answer"
                    }
                ]
            , requirements = []
            , loop = Nothing
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "42"
                                )
                            ]
                        )
                    , taskAttrs = []
                    }
                )
            }
        , Expr
            { binder = Binder "assert0"
            , requires =
                [ Resource
                    { name = Binder "debug0"
                    , dep = Register "answer"
                    }
                ]
            , provides = []
            , outputs = Right []
            , requirements =
                [ Requirement
                    { name = "answer"
                    , origin = Direct
                        ( Binder "debug0" )
                    }
                ]
            , loop = Nothing
            , term = ModuleCall
                ( CallModule
                    { module_ = "assert"
                    , params = Object
                        ( fromList
                            [
                                ( "that"
                                , Array
                                    [ String "answer['msg'] == '42'" ]
                                )
                            ]
                        )
                    , taskAttrs = []
                    }
                )
            }
        ]
    }
, Definition
    { name = "playBackend0"
    , requires =
        [ Resource
            { name = Binder "debug0"
            , dep = Register "answer"
            }
        ]
    , provides = []
    , outputs = Environment
        { getEnv =
            [
                ( Binder "roleAdder0"
                , Right []
                )
            ,
                ( Binder "debug1"
                , Right []
                )
            ]
        }
    , playAttrs =
        [
            ( "gather_facts"
            , Bool False
            )
        ,
            ( "hosts"
            , String "backend"
            )
        ]
    , exprs =
        [ Expr
            { binder = Binder "roleAdder0"
            , requires =
                [ Resource
                    { name = Binder "debug0"
                    , dep = Register "answer"
                    }
                ]
            , provides = []
            , outputs = Right []
            , requirements = []
            , loop = Nothing
            , term = DefinitionCall
                ( CallDefinition
                    { name = "roleAdder"
                    , taskAttrs = []
                    , taskVars =
                        [
                            ( "x"
                            , String "{{ answer['msg'] }}"
                            )
                        ,
                            ( "y"
                            , String "21"
                            )
                        ]
                    }
                )
            }
        , Expr
            { binder = Binder "debug1"
            , requires = []
            , provides = []
            , outputs = Right []
            , requirements = []
            , loop = Nothing
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "Over!"
                                )
                            ]
                        )
                    , taskAttrs = []
                    }
                )
            }
        ]
    }
, Definition
    { name = "roleAdder"
    , requires = []
    , provides =
        [ Resource
            { name = Binder "debugAddingNumbers0"
            , dep = Register "add_result"
            }
        ]
    , outputs = Environment
        { getEnv =
            [
                ( Binder "debugAddingNumbers0"
                , Right
                    [ Resource
                        { name = Binder "debugAddingNumbers0"
                        , dep = Register "add_result"
                        }
                    ]
                )
            ,
                ( Binder "assertCheckingResults0"
                , Right []
                )
            ]
        }
    , playAttrs = []
    , exprs =
        [ Expr
            { binder = Binder "debugAddingNumbers0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "debugAddingNumbers0"
                    , dep = Register "add_result"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "debugAddingNumbers0"
                    , dep = Register "add_result"
                    }
                ]
            , requirements = []
            , loop = Nothing
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "Adding {{ x }} + {{ y }}"
                                )
                            ]
                        )
                    , taskAttrs = []
                    }
                )
            }
        , Expr
            { binder = Binder "assertCheckingResults0"
            , requires =
                [ Resource
                    { name = Binder "debugAddingNumbers0"
                    , dep = Register "add_result"
                    }
                ]
            , provides = []
            , outputs = Right []
            , requirements =
                [ Requirement
                    { name = "add_result"
                    , origin = Direct
                        ( Binder "debugAddingNumbers0" )
                    }
                ]
            , loop = Nothing
            , term = ModuleCall
                ( CallModule
                    { module_ = "assert"
                    , params = Object
                        ( fromList
                            [
                                ( "that"
                                , Array
                                    [ String "x == '42' and y == '21'"
                                    , String "add_result['msg'] == 'Adding 42 + 21'"
                                    ]
                                )
                            ]
                        )
                    , taskAttrs = []
                    }
                )
            }
        ]
    }
]