[ Definition
    { name = "playbook"
    , requires = []
    , provides = []
    , outputs = Environment
        { getEnv = [] }
    , playAttrs = []
    , source = ""
    , exprs =
        [ Expr
            { binder = Binder "resultsLocalhost0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "stat0"
                    , dep = Register "etc"
                    }
                , Resource
                    { name = Binder "stat0"
                    , dep = Path "/etc"
                    }
                , Resource
                    { name = Binder "command0"
                    , dep = Command "test/playbooks"
                    }
                ]
            , outputs = Right []
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = DefinitionCall
                ( CallDefinition
                    { name = "playLocalhost0"
                    , taskVars = []
                    }
                )
            }
        , Expr
            { binder = Binder "resultsZuulExecutor0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "file0"
                    , dep = Register "zuuldir"
                    }
                , Resource
                    { name = Binder "file0"
                    , dep = Path "/tmp/zuul"
                    }
                , Resource
                    { name = Binder "command1"
                    , dep = Command "test/playbooks"
                    }
                ]
            , outputs = Right []
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = DefinitionCall
                ( CallDefinition
                    { name = "playZuulExecutor0"
                    , taskVars = []
                    }
                )
            }
        , Expr
            { binder = Binder "resultsNodepoolLauncher0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "file1"
                    , dep = Path "/tmp/nodepool"
                    }
                , Resource
                    { name = Binder "command2"
                    , dep = Command "test/playbooks"
                    }
                ]
            , outputs = Right []
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = DefinitionCall
                ( CallDefinition
                    { name = "playNodepoolLauncher0"
                    , taskVars = []
                    }
                )
            }
        , Expr
            { binder = Binder "resultsLocalhost1"
            , requires =
                [ Resource
                    { name = Binder "stat0"
                    , dep = Register "etc"
                    }
                ]
            , provides = []
            , outputs = Right []
            , inputs =
                [ Requirement
                    { name = "etc"
                    , origin = Nested
                        ( Binder "resultsLocalhost0" ) 0
                    }
                ]
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = DefinitionCall
                ( CallDefinition
                    { name = "playLocalhost1"
                    , taskVars = []
                    }
                )
            }
        ]
    , handlers = []
    }
, Definition
    { name = "playLocalhost0"
    , requires = []
    , provides =
        [ Resource
            { name = Binder "stat0"
            , dep = Register "etc"
            }
        , Resource
            { name = Binder "stat0"
            , dep = Path "/etc"
            }
        , Resource
            { name = Binder "command0"
            , dep = Command "test/playbooks"
            }
        ]
    , outputs = Environment
        { getEnv =
            [
                ( Binder "stat0"
                , Right
                    [ Resource
                        { name = Binder "stat0"
                        , dep = Register "etc"
                        }
                    , Resource
                        { name = Binder "stat0"
                        , dep = Path "/etc"
                        }
                    ]
                )
            ,
                ( Binder "command0"
                , Right
                    [ Resource
                        { name = Binder "command0"
                        , dep = Command "test/playbooks"
                        }
                    ]
                )
            ]
        }
    , playAttrs =
        [
            ( "hosts"
            , String "localhost"
            )
        ]
    , source = "test/playbooks"
    , exprs =
        [ Expr
            { binder = Binder "stat0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "stat0"
                    , dep = Register "etc"
                    }
                , Resource
                    { name = Binder "stat0"
                    , dep = Path "/etc"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "stat0"
                    , dep = Register "etc"
                    }
                , Resource
                    { name = Binder "stat0"
                    , dep = Path "/etc"
                    }
                ]
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                ( CallModule
                    { module_ = "stat"
                    , params = Object
                        ( fromList
                            [
                                ( "path"
                                , String "/etc"
                                )
                            ]
                        )
                    }
                )
            }
        , Expr
            { binder = Binder "command0"
            , requires =
                [ Resource
                    { name = Binder "stat0"
                    , dep = Register "etc"
                    }
                ]
            , provides =
                [ Resource
                    { name = Binder "command0"
                    , dep = Command "test/playbooks"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "command0"
                    , dep = Command "test/playbooks"
                    }
                ]
            , inputs =
                [ Requirement
                    { name = "etc"
                    , origin = Direct
                        ( Binder "stat0" )
                    }
                , Requirement
                    { name = "_fake_Etc"
                    , origin = Direct
                        ( Binder "stat0" )
                    }
                ]
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                ( CallModule
                    { module_ = "command"
                    , params = String "echo etc exist: {{ etc.stat.exists }}"
                    }
                )
            }
        ]
    , handlers = []
    }
, Definition
    { name = "playZuulExecutor0"
    , requires = []
    , provides =
        [ Resource
            { name = Binder "file0"
            , dep = Register "zuuldir"
            }
        , Resource
            { name = Binder "file0"
            , dep = Path "/tmp/zuul"
            }
        , Resource
            { name = Binder "command1"
            , dep = Command "test/playbooks"
            }
        ]
    , outputs = Environment
        { getEnv =
            [
                ( Binder "file0"
                , Right
                    [ Resource
                        { name = Binder "file0"
                        , dep = Register "zuuldir"
                        }
                    , Resource
                        { name = Binder "file0"
                        , dep = Path "/tmp/zuul"
                        }
                    ]
                )
            ,
                ( Binder "command1"
                , Right
                    [ Resource
                        { name = Binder "command1"
                        , dep = Command "test/playbooks"
                        }
                    ]
                )
            ]
        }
    , playAttrs =
        [
            ( "hosts"
            , String "zuul_executor"
            )
        ]
    , source = "test/playbooks"
    , exprs =
        [ Expr
            { binder = Binder "file0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "file0"
                    , dep = Register "zuuldir"
                    }
                , Resource
                    { name = Binder "file0"
                    , dep = Path "/tmp/zuul"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "file0"
                    , dep = Register "zuuldir"
                    }
                , Resource
                    { name = Binder "file0"
                    , dep = Path "/tmp/zuul"
                    }
                ]
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                ( CallModule
                    { module_ = "file"
                    , params = Object
                        ( fromList
                            [
                                ( "path"
                                , String "/tmp/zuul"
                                )
                            ,
                                ( "state"
                                , String "directory"
                                )
                            ]
                        )
                    }
                )
            }
        , Expr
            { binder = Binder "command1"
            , requires =
                [ Resource
                    { name = Binder "file0"
                    , dep = Path "/tmp/zuul"
                    }
                ]
            , provides =
                [ Resource
                    { name = Binder "command1"
                    , dep = Command "test/playbooks"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "command1"
                    , dep = Command "test/playbooks"
                    }
                ]
            , inputs =
                [ Requirement
                    { name = "zuuldir"
                    , origin = Direct
                        ( Binder "file0" )
                    }
                , Requirement
                    { name = "_fake_TmpZuul"
                    , origin = Direct
                        ( Binder "file0" )
                    }
                ]
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                ( CallModule
                    { module_ = "command"
                    , params = String "echo Starting executor -d /tmp/zuul"
                    }
                )
            }
        ]
    , handlers = []
    }
, Definition
    { name = "playNodepoolLauncher0"
    , requires = []
    , provides =
        [ Resource
            { name = Binder "file1"
            , dep = Path "/tmp/nodepool"
            }
        , Resource
            { name = Binder "command2"
            , dep = Command "test/playbooks"
            }
        ]
    , outputs = Environment
        { getEnv =
            [
                ( Binder "file1"
                , Right
                    [ Resource
                        { name = Binder "file1"
                        , dep = Path "/tmp/nodepool"
                        }
                    ]
                )
            ,
                ( Binder "command2"
                , Right
                    [ Resource
                        { name = Binder "command2"
                        , dep = Command "test/playbooks"
                        }
                    ]
                )
            ,
                ( Binder "debug0"
                , Right []
                )
            ]
        }
    , playAttrs =
        [
            ( "hosts"
            , String "nodepool_launcher"
            )
        ]
    , source = "test/playbooks"
    , exprs =
        [ Expr
            { binder = Binder "file1"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "file1"
                    , dep = Path "/tmp/nodepool"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "file1"
                    , dep = Path "/tmp/nodepool"
                    }
                ]
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                ( CallModule
                    { module_ = "file"
                    , params = Object
                        ( fromList
                            [
                                ( "path"
                                , String "/tmp/nodepool"
                                )
                            ,
                                ( "state"
                                , String "directory"
                                )
                            ]
                        )
                    }
                )
            }
        , Expr
            { binder = Binder "command2"
            , requires =
                [ Resource
                    { name = Binder "file1"
                    , dep = Path "/tmp/nodepool"
                    }
                ]
            , provides =
                [ Resource
                    { name = Binder "command2"
                    , dep = Command "test/playbooks"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "command2"
                    , dep = Command "test/playbooks"
                    }
                ]
            , inputs =
                [ Requirement
                    { name = "_fake_TmpNodepool"
                    , origin = Direct
                        ( Binder "file1" )
                    }
                ]
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                ( CallModule
                    { module_ = "command"
                    , params = String "echo Starting scheduler -d /tmp/nodepool"
                    }
                )
            }
        , Expr
            { binder = Binder "debug0"
            , requires = []
            , provides = []
            , outputs = Right []
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Null
                    }
                )
            }
        ]
    , handlers = []
    }
, Definition
    { name = "playLocalhost1"
    , requires =
        [ Resource
            { name = Binder "stat0"
            , dep = Register "etc"
            }
        ]
    , provides = []
    , outputs = Environment
        { getEnv =
            [
                ( Binder "debug1"
                , Right []
                )
            ]
        }
    , playAttrs =
        [
            ( "hosts"
            , String "localhost"
            )
        ]
    , source = "test/playbooks"
    , exprs =
        [ Expr
            { binder = Binder "debug1"
            , requires =
                [ Resource
                    { name = Binder "stat0"
                    , dep = Register "etc"
                    }
                ]
            , provides = []
            , outputs = Right []
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = ModuleCall
                ( CallModule
                    { module_ = "debug"
                    , params = Object
                        ( fromList
                            [
                                ( "msg"
                                , String "etc stats is {{ etc }}"
                                )
                            ]
                        )
                    }
                )
            }
        ]
    , handlers = []
    }
]