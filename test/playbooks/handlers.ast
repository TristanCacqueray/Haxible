[ Definition
    { name = "playbook"
    , requires = []
    , provides = []
    , outputs = Environment
        { getEnv = [] }
    , playAttrs = []
    , source = ""
    , exprs =
        [ Expr
            { binder = Binder "resultsLocalhost0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "command0"
                    , dep = Command "test/playbooks"
                    }
                , Resource
                    { name = Binder "command1"
                    , dep = Command "test/playbooks"
                    }
                ]
            , outputs = Right []
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs = []
            , term = DefinitionCall
                ( CallDefinition
                    { name = "playLocalhost0"
                    , taskVars = []
                    }
                )
            }
        ]
    , handlers = []
    }
, Definition
    { name = "playLocalhost0"
    , requires = []
    , provides =
        [ Resource
            { name = Binder "command0"
            , dep = Command "test/playbooks"
            }
        , Resource
            { name = Binder "command1"
            , dep = Command "test/playbooks"
            }
        ]
    , outputs = Environment
        { getEnv =
            [
                ( Binder "command0"
                , Right
                    [ Resource
                        { name = Binder "command0"
                        , dep = Command "test/playbooks"
                        }
                    ]
                )
            ,
                ( Binder "command1"
                , Right
                    [ Resource
                        { name = Binder "command1"
                        , dep = Command "test/playbooks"
                        }
                    ]
                )
            ]
        }
    , playAttrs =
        [
            ( "hosts"
            , String "localhost"
            )
        ]
    , source = "test/playbooks"
    , exprs =
        [ Expr
            { binder = Binder "command0"
            , requires = []
            , provides =
                [ Resource
                    { name = Binder "command0"
                    , dep = Command "test/playbooks"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "command0"
                    , dep = Command "test/playbooks"
                    }
                ]
            , inputs = []
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs =
                [
                    ( "notify"
                    , String "Run Handler"
                    )
                ]
            , term = ModuleCall
                ( CallModule
                    { module_ = "command"
                    , params = String "echo change config"
                    }
                )
            }
        , Expr
            { binder = Binder "command1"
            , requires =
                [ Resource
                    { name = Binder "command0"
                    , dep = Command "test/playbooks"
                    }
                ]
            , provides =
                [ Resource
                    { name = Binder "command1"
                    , dep = Command "test/playbooks"
                    }
                ]
            , outputs = Right
                [ Resource
                    { name = Binder "command1"
                    , dep = Command "test/playbooks"
                    }
                ]
            , inputs =
                [ Requirement
                    { name = "_fake_TestPlaybooks"
                    , origin = Direct
                        ( Binder "command0" )
                    }
                ]
            , when_ = Nothing
            , loop = Nothing
            , taskAttrs =
                [
                    ( "changed_when"
                    , Bool False
                    )
                ,
                    ( "notify"
                    , String "Run Other Handler"
                    )
                ]
            , term = ModuleCall
                ( CallModule
                    { module_ = "command"
                    , params = String "echo noop"
                    }
                )
            }
        ]
    , handlers =
        [
            ( "Run Handler"
            , "debug"
            ,
                [
                    ( "debug"
                    , Object
                        ( fromList
                            [
                                ( "msg"
                                , String "Running handler"
                                )
                            ]
                        )
                    )
                ,
                    ( "name"
                    , String "Run Handler"
                    )
                ]
            )
        ,
            ( "Run Other Handler"
            , "debug"
            ,
                [
                    ( "debug"
                    , Object
                        ( fromList
                            [
                                ( "msg"
                                , String "KO, other handler should not run"
                                )
                            ]
                        )
                    )
                ,
                    ( "name"
                    , String "Run Other Handler"
                    )
                ]
            )
        ]
    }
]