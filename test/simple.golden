( Playbook
    [ HostPlay
        { hosts = "localhost"
        , tasks =
            [ Task
                { name = Nothing
                , action = "stat"
                , attributes = Object
                    ( fromList
                        [
                            ( "path"
                            , String "/tmp"
                            )
                        ]
                    )
                , requires = []
                , register = Just "tmpstat"
                , loop = Nothing
                , vars = []
                }
            , Task
                { name = Nothing
                , action = "command"
                , attributes = Object
                    ( fromList
                        [
                            ( "_raw_params"
                            , String "echo tmp exist: {{ tmpstat.stat.exists }}"
                            )
                        ]
                    )
                , requires = [ "tmpstat" ]
                , register = Nothing
                , loop = Nothing
                , vars = []
                }
            ]
        , hostVars = Nothing
        }
    , HostPlay
        { hosts = "zuul_executor"
        , tasks =
            [ Task
                { name = Nothing
                , action = "file"
                , attributes = Object
                    ( fromList
                        [
                            ( "path"
                            , String "/etc/zuul"
                            )
                        ,
                            ( "state"
                            , String "directory"
                            )
                        ]
                    )
                , requires = []
                , register = Just "_etc_zuul"
                , loop = Nothing
                , vars = []
                }
            , Task
                { name = Nothing
                , action = "command"
                , attributes = Object
                    ( fromList
                        [
                            ( "_raw_params"
                            , String "echo Starting executor -c /etc/zuul/zuul.conf"
                            )
                        ]
                    )
                , requires = [ "_etc_zuul" ]
                , register = Nothing
                , loop = Nothing
                , vars = []
                }
            ]
        , hostVars = Nothing
        }
    , HostPlay
        { hosts = "zuul_scheduler"
        , tasks =
            [ Task
                { name = Nothing
                , action = "file"
                , attributes = Object
                    ( fromList
                        [
                            ( "path"
                            , String "/etc/zuul"
                            )
                        ,
                            ( "state"
                            , String "directory"
                            )
                        ]
                    )
                , requires = []
                , register = Just "_etc_zuul"
                , loop = Nothing
                , vars = []
                }
            , Task
                { name = Nothing
                , action = "command"
                , attributes = Object
                    ( fromList
                        [
                            ( "_raw_params"
                            , String "echo Starting scheduler -c /etc/zuul/zuul.conf"
                            )
                        ]
                    )
                , requires = [ "_etc_zuul" ]
                , register = Nothing
                , loop = Nothing
                , vars = []
                }
            ]
        , hostVars = Nothing
        }
    ]
, "{-# LANGUAGE QuasiQuotes, ApplicativeDo, OverloadedStrings #-}
  {- cabal:
  build-depends: base, haxible
  ghc-options: -threaded -rtsopts -with-rtsopts=-N -with-rtsopts=-T
  -}
  module Main (main) where

  import Haxible.Eval

  main :: IO ()
  main = runHaxible playbook

  playbook :: AnsibleHaxl ()
  playbook = do
    play_localhost
    play_zuul_executor
    play_zuul_scheduler
    pure ()

  play_localhost :: AnsibleHaxl ()
  play_localhost = do
    tmpstat <- runTask "localhost" (Nothing) "stat" [json| {"path":"/tmp"} |] []
    runTask "localhost" (Nothing) "command" [json| {"_raw_params":"echo tmp exist: {{ tmpstat.stat.exists }}"} |] [("tmpstat", tmpstat)]
    pure ()
  play_zuul_executor :: AnsibleHaxl ()
  play_zuul_executor = do
    _etc_zuul <- runTask "zuul_executor" (Nothing) "file" [json| {"path":"/etc/zuul","state":"directory"} |] []
    runTask "zuul_executor" (Nothing) "command" [json| {"_raw_params":"echo Starting executor -c /etc/zuul/zuul.conf"} |] [("_etc_zuul", _etc_zuul)]
    pure ()
  play_zuul_scheduler :: AnsibleHaxl ()
  play_zuul_scheduler = do
    _etc_zuul <- runTask "zuul_scheduler" (Nothing) "file" [json| {"path":"/etc/zuul","state":"directory"} |] []
    runTask "zuul_scheduler" (Nothing) "command" [json| {"_raw_params":"echo Starting scheduler -c /etc/zuul/zuul.conf"} |] [("_etc_zuul", _etc_zuul)]
    pure ()
  "
)